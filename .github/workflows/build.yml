name: Build

on:
  workflow_dispatch:
    inputs:
      BuildArch:
        type: choice
        description: Build arch
        default: x64
        required: true
        options:
        - Win32
        - x64
      BuildConfig:
        type: choice
        description: Build config
        default: Release
        required: true
        options:
        - Debug
        - Release
      CustomImGui:
        type: boolean
        description: Build using custom ImGui
        default: false
      ImGuiRepository:
        description: ImGui repository
        default: 'https://github.com/ocornut/imgui'
        required: true
      ImGuiCheckout:
        description: ImGui branch or commit id
        default: docking
        required: false
      BuildCImPlot:
        type: boolean
        description: Build CImPlot
        default: false
      BuildCImGuizmo:
        type: boolean
        description: Build CImGuizmo
        default: false

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1

    - name: Cache Dependencies
      id: cache_dependencies
      uses: actions/cache@v3
      with:
        path: |
          C:/vcpkg/packages/luajit_x86-windows/tools
          C:/vcpkg/packages/luajit_x86-windows/bin
        key: ${{ runner.os }}-dependencies

    - name: Install Dependencies
      if: steps.cache_dependencies.outputs.cache-hit != 'true'
      shell: bash
      run: |
        vcpkg install luajit

    - name: Download Submodules
      shell: bash
      run: git submodule update --init --recursive

    - name: Download Custom ImGui
      if: ${{ github.event.inputs.CustomImGui == 'true' }}
      working-directory: cimgui
      shell: bash
      run: |
        rm -rf imgui
        git clone "${{ github.event.inputs.ImGuiRepository }}" imgui
        cd imgui
        echo && [ ! -z "${{ github.event.inputs.ImGuiCheckout }}" ] && git checkout "${{ github.event.inputs.ImGuiCheckout }}"
    
    - name: Update ImPlot
      if: ${{ github.event.inputs.BuildCImPlot == 'true' }}
      working-directory: cimplot/implot
      shell: bash
      run: git pull origin master

    - name: Update ImGuizmo
      if: ${{ github.event.inputs.BuildCImGuizmo == 'true' }}
      working-directory: cimguizmo/imguizmo
      shell: bash
      run: git pull origin master

    - name: Generate Bindings - cimgui
      working-directory: cimgui
      shell: bash
      run: |
        export PATH=$PATH:/C/vcpkg/packages/luajit_x86-windows/tools/:/C/vcpkg/packages/luajit_x86-windows/bin/
        cd ./generator
        bash ./generator.sh

    - name: Generate Bindings - cimplot
      working-directory: cimplot
      shell: bash
      run: |
        export PATH=$PATH:/C/vcpkg/packages/luajit_x86-windows/tools/:/C/vcpkg/packages/luajit_x86-windows/bin/
        cd ./generator
        bash ./generator.sh

    - name: Generate Bindings - cimguizmo
      working-directory: cimguizmo
      shell: bash
      run: |
        export PATH=$PATH:/C/vcpkg/packages/luajit_x86-windows/tools/:/C/vcpkg/packages/luajit_x86-windows/bin/
        cd ./generator
        bash ./generator.sh

    - name: CMake
      shell: bash
      run: |
        mkdir cmake-build
        cd cmake-build
        build_cimplot=$(if [ "${{ github.event.inputs.BuildCImPlot }}" = 'true' ]; then echo "-DBUILD_CIMPLOT=1"; else echo ""; fi)
        build_cimguizmo=$(if [ "${{ github.event.inputs.BuildCImGuizmo }}" = 'true' ]; then echo "-DBUILD_CIMGUIZMO=1"; else echo ""; fi)
        cmake $build_cimplot $build_cimguizmo -DCMAKE_GENERATOR_PLATFORM=${{ github.event.inputs.BuildArch }} ..

    - name: Build
      working-directory: cmake-build
      shell: bash
      run: |
        cmake --build . --config ${{ github.event.inputs.BuildConfig }}

    - name: Prepare artifacts - imgui
      shell: bash
      run: |
        mkdir artifacts
        cd artifacts
        rm -rf ../cimgui/imgui/.git
        cp -r ../cimgui/imgui/ .

    - name: Prepare artifacts - cimgui
      working-directory: artifacts
      shell: bash
      run: |
        mkdir cimgui
        cd cimgui
        cp ../../cmake-build/cimgui/${{ github.event.inputs.BuildConfig }}/cimgui.* .
        cp ../../cimgui/cimgui.* .
        mkdir generator_output
        cp ../../cimgui/generator/output/* ./generator_output

    - name: Prepare artifacts - cimplot
      if: ${{ github.event.inputs.BuildCImPlot == 'true' }}
      working-directory: artifacts
      shell: bash
      run: |
        mkdir cimplot
        cd cimplot
        cp ../../cmake-build/cimplot/${{ github.event.inputs.BuildConfig }}/cimplot.* .
        cp ../../cimplot/cimplot.* .
        mkdir generator_output
        cp ../../cimplot/generator/output/* ./generator_output

    - name: Prepare artifacts - cimguizmo
      if: ${{ github.event.inputs.BuildCImGuizmo == 'true' }}
      working-directory: artifacts
      shell: bash
      run: |
        mkdir cimguizmo
        cd cimguizmo
        cp ../../cmake-build/cimguizmo/${{ github.event.inputs.BuildConfig }}/cimguizmo.* .
        cp ../../cimguizmo/cimguizmo.* .
        mkdir generator_output
        cp ../../cimguizmo/generator/output/* ./generator_output

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ github.event.inputs.BuildArch }}-${{ github.event.inputs.BuildConfig }}
        path: artifacts
        if-no-files-found: error
